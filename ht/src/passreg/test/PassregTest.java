package passreg.test;
// Generated by ComTest BEGIN
import java.io.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
import passreg.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.04.11 12:49:51 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class PassregTest {



  // Generated by ComTest BEGIN
  /** testGetPaasytLkm86 */
  @Test
  public void testGetPaasytLkm86() {    // Passreg: 86
    Passreg pg = new Passreg(); 
    assertEquals("From: Passreg line: 88", 0, pg.getPaasytLkm()); 
    Paasy gmail1 = new Paasy(); 
    gmail1.rekisteroi(); 
    gmail1.taytaGmailTiedoilla(); 
    pg.lisaa(gmail1); 
    assertEquals("From: Passreg line: 93", 1, pg.getPaasytLkm()); 
    Paasy gmail2 = new Paasy(); 
    gmail2.rekisteroi(); 
    gmail2.taytaGmailTiedoilla(); 
    pg.lisaa(gmail2); 
    assertEquals("From: Passreg line: 98", 2, pg.getPaasytLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa124 */
  @Test
  public void testLisaa124() {    // Passreg: 124
    Passreg passreg = new Passreg(); 
    Paasy p1 = new Paasy(); 
    p1.taytaGmailTiedoilla(); 
    p1.rekisteroi(); 
    assertEquals("From: Passreg line: 129", 0, passreg.getPaasytLkm()); 
    passreg.lisaa(p1); 
    assertEquals("From: Passreg line: 131", 1, passreg.getPaasytLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa141 */
  @Test
  public void testLisaa141() {    // Passreg: 141
    Passreg passreg = new Passreg(); 
    Kategoria k1 = new Kategoria("some"); 
    k1.rekisteroi(); 
    Kategoria k2 = new Kategoria("opiskelu"); 
    k2.rekisteroi(); 
    Kategoria k3 = new Kategoria("työ"); 
    k3.rekisteroi(); 
    assertEquals("From: Passreg line: 149", 0, passreg.getKategoriatLkm()); 
    try {
    passreg.annaKategoria(0); 
    fail("Passreg: 150 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    passreg.lisaa(k1); 
    assertEquals("From: Passreg line: 152", 1, passreg.getKategoriatLkm()); 
    assertEquals("From: Passreg line: 153", "some", passreg.annaKategoria(0).getNimi()); 
    passreg.lisaa(k2); 
    assertEquals("From: Passreg line: 155", 2, passreg.getKategoriatLkm()); 
    assertEquals("From: Passreg line: 156", "opiskelu", passreg.annaKategoria(1).getNimi()); 
    passreg.lisaa(k3); 
    assertEquals("From: Passreg line: 158", 3, passreg.getKategoriatLkm()); 
    assertEquals("From: Passreg line: 159", "työ", passreg.annaKategoria(2).getNimi()); 
    try {
    passreg.annaKategoria(3); 
    fail("Passreg: 160 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLueTiedostosta205 */
  @Test
  public void testLueTiedostosta205() {    // Passreg: 205
    Passreg regis = new Passreg(); 
    Kategoria k1 = new Kategoria("opiskelu"); k1.rekisteroi(); 
    Kategoria k2 = new Kategoria("viihde"); k2.rekisteroi(); 
    int n1 = k1.getTunnusNro(); 
    int n2 = k2.getTunnusNro(); 
    Paasy p1 = new Paasy(n1); p1.aseta(1, "gmail1"); 
    Paasy p2 = new Paasy(n2); p2.aseta(1, "gmail2"); 
    Paasy p3 = new Paasy(n2); p3.aseta(1, "gmail3"); 
    Paasy p4 = new Paasy(n1); p4.aseta(1, "gmail4"); 
    Paasy p5 = new Paasy(n2); p5.aseta(1, "gmail5"); 
    String hakemisto = "testi"; 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    regis.lueTiedostosta(hakemisto); 
    regis.lisaa(p1); 
    regis.lisaa(p2); 
    regis.lisaa(p3); 
    regis.lisaa(k1); 
    regis.lisaa(p4); 
    regis.lisaa(k2); 
    regis.lisaa(p5); 
    regis.tallenna(); 
    List<Paasy> pst = regis.getPaasyt(n1); 
    Iterator<Paasy> it = pst.iterator(); 
    assertEquals("From: Passreg line: 232", p1, it.next()); 
    assertEquals("From: Passreg line: 233", p4, it.next()); 
    assertEquals("From: Passreg line: 234", false, it.hasNext()); 
    List<Paasy> loytyneet = regis.getPaasyt(n2); 
    Iterator<Paasy> ih = loytyneet.iterator(); 
    assertEquals("From: Passreg line: 237", true, ih.hasNext()); 
    assertEquals("From: Passreg line: 238", p2, ih.next()); 
    assertEquals("From: Passreg line: 239", p3, ih.next()); 
    assertEquals("From: Passreg line: 240", true, ih.hasNext()); 
    assertEquals("From: Passreg line: 241", p5, ih.next()); 
    try {
    ih.next(); 
    fail("Passreg: 242 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoistaKategoria263 */
  @Test
  public void testPoistaKategoria263() {    // Passreg: 263
    Passreg psg = new Passreg(); 
    Paasy p1 = new Paasy(); 
    p1.parse("1|1|gmail||||abcef"); 
    Paasy p2 = new Paasy(); 
    p2.parse("2|1|facebook|soturi123|||ghijkl"); 
    Paasy p3 = new Paasy(2); 
    p3.aseta(1, "instagramm"); 
    psg.lisaa(p1); psg.lisaa(p2); psg.lisaa(p3); 
    assertEquals("From: Passreg line: 272", 3, psg.getPaasytLkm()); 
    assertEquals("From: Passreg line: 273", "gmail", psg.annaPaasy(0).anna(1)); 
    Kategoria k1 = new Kategoria(); 
    k1.parse("1|tyo"); 
    Kategoria k2 = new Kategoria(); 
    k2.parse("2|opiskelu"); 
    psg.lisaa(k1); psg.lisaa(k2); 
    assertEquals("From: Passreg line: 279", 2, psg.getKategoriatLkm()); 
    psg.poistaKategoria(1); 
    assertEquals("From: Passreg line: 281", 1, psg.getKategoriatLkm()); 
    assertEquals("From: Passreg line: 282", 1, psg.getPaasytLkm()); 
    assertEquals("From: Passreg line: 283", p3, psg.annaPaasy(0)); 
    assertEquals("From: Passreg line: 284", k2, psg.annaKategoria(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetPaasyt297 */
  @Test
  public void testGetPaasyt297() {    // Passreg: 297
    Passreg pss = new Passreg(); 
    Kategoria k = new Kategoria(); 
    int n = k.getTunnusNro(); 
    pss.lisaa(k); 
    Paasy p1 = new Paasy(n); p1.taytaGmailTiedoilla(); 
    Paasy p2 = new Paasy(n); p2.taytaGmailTiedoilla(); 
    Paasy p3 = new Paasy(n+1); p3.taytaGmailTiedoilla(); 
    pss.lisaa(p1); pss.lisaa(p2); pss.lisaa(p3); 
    List<Paasy> pst = pss.getPaasyt(n); 
    Iterator<Paasy> i = pst.iterator(); 
    Paasy p = i.next(); 
    assertEquals("From: Passreg line: 310", true, (p == p1 || p == p2)); 
    assertEquals("From: Passreg line: 311", true, i.hasNext()); 
    i.next(); 
    assertEquals("From: Passreg line: 313", false, i.hasNext()); 
    try {
    i.next(); 
    fail("Passreg: 314 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testEtsi347 */
  @Test
  public void testEtsi347() {    // Passreg: 347
    Paasy p1 = new Paasy(); 
    p1.aseta(1, "gmail3"); 
    Paasy p2 = new Paasy(); 
    p2.aseta(1, "gmail1"); 
    Paasy p3 = new Paasy(); 
    p3.aseta(1, "gmail2"); 
    Passreg psg = new Passreg(); 
    psg.lisaa(p1); psg.lisaa(p2); psg.lisaa(p3); 
    Collection<Paasy> loytyneet = psg.etsi("gmail1", 1); 
    Iterator<Paasy> i = loytyneet.iterator(); 
    assertEquals("From: Passreg line: 358", p2, i.next()); 
    loytyneet = psg.etsi("gmail2", 1); 
    i = loytyneet.iterator(); 
    assertEquals("From: Passreg line: 361", p3, i.next()); 
    assertEquals("From: Passreg line: 362", false, i.hasNext()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaa372 */
  @Test
  public void testKorvaaTaiLisaa372() {    // Passreg: 372
    Passreg psg = new Passreg(); 
    assertEquals("From: Passreg line: 374", false, psg.onMuutettu()); 
    Paasy p1 = new Paasy(); 
    p1.parse("1|1|gmail1"); 
    psg.korvaaTaiLisaa(p1); 
    assertEquals("From: Passreg line: 378", true, psg.onMuutettu()); 
    assertEquals("From: Passreg line: 379", "gmail1", psg.annaPaasy(0).anna(1)); 
    p1.parse("1|2|facebook"); 
    psg.korvaaTaiLisaa(p1); 
    assertEquals("From: Passreg line: 382", "facebook", psg.annaPaasy(0).anna(1)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testKorvaaTaiLisaa392 */
  @Test
  public void testKorvaaTaiLisaa392() {    // Passreg: 392
    Passreg psg = new Passreg(); 
    Kategoria k1 = new Kategoria("tyo"); 
    Kategoria k2 = new Kategoria("opiskelu"); 
    assertEquals("From: Passreg line: 396", false, psg.onMuutettu()); 
    psg.lisaa(k1); 
    psg.lisaa(k2); 
    assertEquals("From: Passreg line: 399", "tyo", psg.annaKategoria(0).getNimi()); 
    k1.parse("1|viihde"); 
    psg.korvaaTaiLisaa(k1); 
    assertEquals("From: Passreg line: 402", "viihde", psg.annaKategoria(0).getNimi()); 
    assertEquals("From: Passreg line: 403", true, psg.onMuutettu()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testGetName414 */
  @Test
  public void testGetName414() {    // Passreg: 414
    Passreg psg = new Passreg(); 
    psg.setTiedostonNimi("toinenTesti"); 
    assertEquals("From: Passreg line: 417", "toinenTesti", psg.getName()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKategoriat428 */
  @Test
  public void testAnnaKategoriat428() {    // Passreg: 428
    Passreg psg = new Passreg(); 
    Kategoria k1 = new Kategoria("tyo"); 
    Kategoria k2 = new Kategoria("opiskelu"); 
    psg.lisaa(k1); psg.lisaa(k2); 
    List<Kategoria> katet = psg.annaKategoriat(); 
    Iterator<Kategoria> i = katet.iterator(); 
    assertEquals("From: Passreg line: 436", k2, i.next()); 
    assertEquals("From: Passreg line: 437", true, i.hasNext()); 
    assertEquals("From: Passreg line: 438", k1, i.next()); 
    assertEquals("From: Passreg line: 439", false, i.hasNext()); 
  } // Generated by ComTest END
}